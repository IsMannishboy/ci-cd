name: Smart CI/CD

on:
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ghcr.io/${{ github.repository }}

jobs:
  detect-changes:
    name: Detect changed services
    runs-on: ubuntu-latest
    outputs:
      changed_services: ${{ steps.detect.outputs.changed_services }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: detect
        run: |
          echo "Checking changed folders..."
          # Получаем список изменённых путей
          CHANGED=$(git diff --name-only HEAD~1 HEAD | cut -d'/' -f1 | sort -u)
          echo "Changed: $CHANGED"

          # Отфильтровываем только сервисы, у которых есть Dockerfile
          SERVICES=""
          for dir in $CHANGED; do
            if [ -f "$dir/Dockerfile" ]; then
              SERVICES="$SERVICES $dir"
            fi
          done

          SERVICES=$(echo $SERVICES | xargs)
          echo "Detected services: $SERVICES"

          echo "changed_services=$SERVICES" >> $GITHUB_OUTPUT

  build:
    name: Build & Push Images
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.changed_services != '' }}
    strategy:
      matrix:
        service: ${{ fromJSON(format('["{0}"]', join(needs.detect-changes.outputs.changed_services, '","'))) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ${{ matrix.service }}
        run: |
          IMAGE=$IMAGE_PREFIX/${{ matrix.service }}:${{ github.sha }}
          docker build -t $IMAGE ./${{ matrix.service }}
          docker push $IMAGE

  deploy:
    name: Deploy all services
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy
        run: |
          echo "Deploying all updated images..."
          # пример: Kubernetes
          # for service in ${{ needs.detect-changes.outputs.changed_services }}; do
          #   kubectl set image deployment/$service $service=$IMAGE_PREFIX/$service:${{ github.sha }}
          # done

          # пример: Docker Compose (pull + up)
          docker compose pull
          docker compose up -d
